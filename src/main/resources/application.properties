spring.application.name=StreetFighter

spring.config.import=optional:file:.env[.properties]
# Database Configuration
#spring.datasource.url=jdbc:mysql://localhost:3306/street
#spring.datasource.username=root
#spring.datasource.password=nahLemmeGeek443!
spring.datasource.url=${DB_URL}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.jpa.hibernate.ddl-auto=update


# Auth0 OAuth2 Client Configuration
spring.security.oauth2.client.registration.auth0.client-id=${AUTH0_CLIENT_ID}
spring.security.oauth2.client.registration.auth0.client-secret=${AUTH0_CLIENT_SECRET}
#spring.security.oauth2.client.registration.auth0.client-id=CLdibGQNKhywm9e9e5GBPKayKdE1Yf6o
#spring.security.oauth2.client.registration.auth0.client-secret=Yupn_x8tasDwJ5PGrJBVmViZXJOlFMQ3vfKfk7w7xf1lkHwzCIYkSfZsZtiAFgSM
spring.security.oauth2.client.registration.auth0.scope=openid,profile,email
spring.security.oauth2.client.registration.auth0.client-name=Auth0
spring.security.oauth2.client.registration.auth0.authorization-grant-type=authorization_code

# Replace with your backend's URL, which Auth0 will use to redirect back to your app after authentication
#spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:3000/login

# Redirect URI should be handled by the backend
spring.security.oauth2.client.registration.auth0.redirect-uri=${AUTH0_REDIRECT_URI}
#spring.security.oauth2.client.registration.auth0.redirect-uri=http://localhost:8080/login/oauth2/code/auth0


# Auth0 OAuth2 Provider Configuration
spring.security.oauth2.client.provider.auth0.authorization-uri=${AUTH0_AUTHORIZATION_URI}
spring.security.oauth2.client.provider.auth0.token-uri=${AUTH0_TOKEN_URI}
spring.security.oauth2.client.provider.auth0.user-info-uri=${AUTH0_USER_INFO_URI}
spring.security.oauth2.client.provider.auth0.jwk-set-uri=${AUTH0_JWK_SET_URI}
spring.security.oauth2.client.provider.auth0.issuer-uri=${AUTH0_ISSUER_URI}
#spring.security.oauth2.client.provider.auth0.authorization-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/authorize
#spring.security.oauth2.client.provider.auth0.token-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/oauth/token
#spring.security.oauth2.client.provider.auth0.user-info-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/userinfo
#spring.security.oauth2.client.provider.auth0.jwk-set-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/.well-known/jwks.json
#spring.security.oauth2.client.provider.auth0.issuer-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/

# Security Configuration for JWT Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTH0_ISSUER_URI}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${AUTH0_JWK_SET_URI}
#spring.security.oauth2.resourceserver.jwt.issuer-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/
#spring.security.oauth2.resourceserver.jwt.jwk-set-uri=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/.well-known/jwks.json

spring.security.oauth2.resourceserver.jwt.audience=${AUTH0_AUDIENCE}
#spring.security.oauth2.resourceserver.jwt.audience=https://dev-75ytwc3q1ajy1ls4.us.auth0.com/api/v2/